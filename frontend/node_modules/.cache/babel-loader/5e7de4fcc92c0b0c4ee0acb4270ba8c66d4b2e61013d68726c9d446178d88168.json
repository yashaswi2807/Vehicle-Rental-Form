{"ast":null,"code":"import { singleItemValueManager } from \"../internals/utils/valueManagers.js\";\n\n/**\n * Validation props used by the Date Picker, Date Field and Date Calendar components.\n */\n\n/**\n * Validation props as received by the validateDate method.\n */\n\n/**\n * Name of the props that should be defaulted before being passed to the validateDate method.\n */\n\nexport const validateDate = ({\n  props,\n  value,\n  timezone,\n  adapter\n}) => {\n  if (value === null) {\n    return null;\n  }\n  const {\n    shouldDisableDate,\n    shouldDisableMonth,\n    shouldDisableYear,\n    disablePast,\n    disableFuture,\n    minDate,\n    maxDate\n  } = props;\n  const now = adapter.utils.date(undefined, timezone);\n  switch (true) {\n    case !adapter.utils.isValid(value):\n      return 'invalidDate';\n    case Boolean(shouldDisableDate && shouldDisableDate(value)):\n      return 'shouldDisableDate';\n    case Boolean(shouldDisableMonth && shouldDisableMonth(value)):\n      return 'shouldDisableMonth';\n    case Boolean(shouldDisableYear && shouldDisableYear(value)):\n      return 'shouldDisableYear';\n    case Boolean(disableFuture && adapter.utils.isAfterDay(value, now)):\n      return 'disableFuture';\n    case Boolean(disablePast && adapter.utils.isBeforeDay(value, now)):\n      return 'disablePast';\n    case Boolean(minDate && adapter.utils.isBeforeDay(value, minDate)):\n      return 'minDate';\n    case Boolean(maxDate && adapter.utils.isAfterDay(value, maxDate)):\n      return 'maxDate';\n    default:\n      return null;\n  }\n};\nvalidateDate.valueManager = singleItemValueManager;","map":{"version":3,"names":["singleItemValueManager","validateDate","props","value","timezone","adapter","shouldDisableDate","shouldDisableMonth","shouldDisableYear","disablePast","disableFuture","minDate","maxDate","now","utils","date","undefined","isValid","Boolean","isAfterDay","isBeforeDay","valueManager"],"sources":["/Users/mac8/Desktop/vehicle-rental-form/frontend/node_modules/@mui/x-date-pickers/esm/validation/validateDate.js"],"sourcesContent":["import { singleItemValueManager } from \"../internals/utils/valueManagers.js\";\n\n/**\n * Validation props used by the Date Picker, Date Field and Date Calendar components.\n */\n\n/**\n * Validation props as received by the validateDate method.\n */\n\n/**\n * Name of the props that should be defaulted before being passed to the validateDate method.\n */\n\nexport const validateDate = ({\n  props,\n  value,\n  timezone,\n  adapter\n}) => {\n  if (value === null) {\n    return null;\n  }\n  const {\n    shouldDisableDate,\n    shouldDisableMonth,\n    shouldDisableYear,\n    disablePast,\n    disableFuture,\n    minDate,\n    maxDate\n  } = props;\n  const now = adapter.utils.date(undefined, timezone);\n  switch (true) {\n    case !adapter.utils.isValid(value):\n      return 'invalidDate';\n    case Boolean(shouldDisableDate && shouldDisableDate(value)):\n      return 'shouldDisableDate';\n    case Boolean(shouldDisableMonth && shouldDisableMonth(value)):\n      return 'shouldDisableMonth';\n    case Boolean(shouldDisableYear && shouldDisableYear(value)):\n      return 'shouldDisableYear';\n    case Boolean(disableFuture && adapter.utils.isAfterDay(value, now)):\n      return 'disableFuture';\n    case Boolean(disablePast && adapter.utils.isBeforeDay(value, now)):\n      return 'disablePast';\n    case Boolean(minDate && adapter.utils.isBeforeDay(value, minDate)):\n      return 'minDate';\n    case Boolean(maxDate && adapter.utils.isAfterDay(value, maxDate)):\n      return 'maxDate';\n    default:\n      return null;\n  }\n};\nvalidateDate.valueManager = singleItemValueManager;"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,qCAAqC;;AAE5E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAC3BC,KAAK;EACLC,KAAK;EACLC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,IAAIF,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;EACb;EACA,MAAM;IACJG,iBAAiB;IACjBC,kBAAkB;IAClBC,iBAAiB;IACjBC,WAAW;IACXC,aAAa;IACbC,OAAO;IACPC;EACF,CAAC,GAAGV,KAAK;EACT,MAAMW,GAAG,GAAGR,OAAO,CAACS,KAAK,CAACC,IAAI,CAACC,SAAS,EAAEZ,QAAQ,CAAC;EACnD,QAAQ,IAAI;IACV,KAAK,CAACC,OAAO,CAACS,KAAK,CAACG,OAAO,CAACd,KAAK,CAAC;MAChC,OAAO,aAAa;IACtB,KAAKe,OAAO,CAACZ,iBAAiB,IAAIA,iBAAiB,CAACH,KAAK,CAAC,CAAC;MACzD,OAAO,mBAAmB;IAC5B,KAAKe,OAAO,CAACX,kBAAkB,IAAIA,kBAAkB,CAACJ,KAAK,CAAC,CAAC;MAC3D,OAAO,oBAAoB;IAC7B,KAAKe,OAAO,CAACV,iBAAiB,IAAIA,iBAAiB,CAACL,KAAK,CAAC,CAAC;MACzD,OAAO,mBAAmB;IAC5B,KAAKe,OAAO,CAACR,aAAa,IAAIL,OAAO,CAACS,KAAK,CAACK,UAAU,CAAChB,KAAK,EAAEU,GAAG,CAAC,CAAC;MACjE,OAAO,eAAe;IACxB,KAAKK,OAAO,CAACT,WAAW,IAAIJ,OAAO,CAACS,KAAK,CAACM,WAAW,CAACjB,KAAK,EAAEU,GAAG,CAAC,CAAC;MAChE,OAAO,aAAa;IACtB,KAAKK,OAAO,CAACP,OAAO,IAAIN,OAAO,CAACS,KAAK,CAACM,WAAW,CAACjB,KAAK,EAAEQ,OAAO,CAAC,CAAC;MAChE,OAAO,SAAS;IAClB,KAAKO,OAAO,CAACN,OAAO,IAAIP,OAAO,CAACS,KAAK,CAACK,UAAU,CAAChB,KAAK,EAAES,OAAO,CAAC,CAAC;MAC/D,OAAO,SAAS;IAClB;MACE,OAAO,IAAI;EACf;AACF,CAAC;AACDX,YAAY,CAACoB,YAAY,GAAGrB,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}