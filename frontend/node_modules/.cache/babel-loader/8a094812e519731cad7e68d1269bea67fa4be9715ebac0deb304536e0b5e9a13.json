{"ast":null,"code":"var _jsxFileName = \"/Users/mac8/Desktop/vehicle-rental-form/frontend/src/components/steps/StepVehicleType.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StepVehicleType({\n  formData,\n  setFormData,\n  nextStep,\n  prevStep\n}) {\n  _s();\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    async function fetchVehicleTypes() {\n      try {\n        const res = await api.get(`/vehicle-types?wheel=${formData.wheels}`);\n        setVehicleTypes(res.data);\n        setLoading(false);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch vehicle types');\n        setLoading(false);\n      }\n    }\n    if (formData.wheels) {\n      fetchVehicleTypes();\n    }\n  }, [formData.wheels]);\n  const handleNext = () => {\n    if (!formData.vehicleTypeId) {\n      setError('Please select a vehicle type');\n      return;\n    }\n    setError('');\n    nextStep();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Select the type of vehicle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: vehicleTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"vehicleType\",\n          id: `type-${type.id}`,\n          value: type.id,\n          checked: formData.vehicleTypeId === String(type.id),\n          onChange: e => setFormData({\n            ...formData,\n            vehicleTypeId: e.target.value,\n            vehicleId: '' // reset model when type changes\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `type-${type.id}`,\n          children: type.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, type.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: prevStep,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleNext,\n        disabled: loading,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(StepVehicleType, \"A1LxWuFtfVYeOu1rD5HUN9qiU2s=\");\n_c = StepVehicleType;\nexport default StepVehicleType;\nvar _c;\n$RefreshReg$(_c, \"StepVehicleType\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Fragment","_Fragment","StepVehicleType","formData","setFormData","nextStep","prevStep","_s","vehicleTypes","setVehicleTypes","loading","setLoading","error","setError","fetchVehicleTypes","res","get","wheels","data","err","console","handleNext","vehicleTypeId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","className","name","id","value","checked","String","onChange","e","target","vehicleId","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mac8/Desktop/vehicle-rental-form/frontend/src/components/steps/StepVehicleType.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\n\nfunction StepVehicleType({ formData, setFormData, nextStep, prevStep }) {\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function fetchVehicleTypes() {\n      try {\n        const res = await api.get(`/vehicle-types?wheel=${formData.wheels}`);\n        setVehicleTypes(res.data);\n        setLoading(false);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch vehicle types');\n        setLoading(false);\n      }\n    }\n\n    if (formData.wheels) {\n      fetchVehicleTypes();\n    }\n  }, [formData.wheels]);\n\n  const handleNext = () => {\n    if (!formData.vehicleTypeId) {\n      setError('Please select a vehicle type');\n      return;\n    }\n    setError('');\n    nextStep();\n  };\n\n  return (\n    <div>\n      <h5>Select the type of vehicle</h5>\n\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          {vehicleTypes.map((type) => (\n            <div className=\"form-check mb-2\" key={type.id}>\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"vehicleType\"\n                id={`type-${type.id}`}\n                value={type.id}\n                checked={formData.vehicleTypeId === String(type.id)}\n                onChange={(e) =>\n                  setFormData({\n                    ...formData,\n                    vehicleTypeId: e.target.value,\n                    vehicleId: '', // reset model when type changes\n                  })\n                }\n              />\n              <label className=\"form-check-label\" htmlFor={`type-${type.id}`}>\n                {type.name}\n              </label>\n            </div>\n          ))}\n        </>\n      )}\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n\n      <div className=\"d-flex justify-content-between mt-3\">\n        <button className=\"btn btn-secondary\" onClick={prevStep}>\n          Back\n        </button>\n        <button className=\"btn btn-primary\" onClick={handleNext} disabled={loading}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default StepVehicleType;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}